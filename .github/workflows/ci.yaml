---
name: CI
on:
  pull_request:
  push:
    branches: [master]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      terraform: ${{ steps.filter.outputs.terraform }}
      kube: ${{ steps.filter.outputs.kube }}
      helm: ${{ steps.filter.outputs.helm }}
      yaml: ${{ steps.filter.outputs.yaml }}
      md: ${{ steps.filter.outputs.md }}
      security: ${{ steps.filter.outputs.security }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            generic:
              - '**/*.md'
              - '**/*.yml'
              - '**/*.yaml'
              - '**/*.sh'
              - '**/Dockerfile'
            terraform:
              - 'terraform/**'
              - '**/*.tf'
              - '**/*.tfvars'
              - '**/*.tf.json'
            kube:
              - 'kubernetes/**'
              - 'manifests/**'
              - '**/*.k8s.yml'
              - '**/kustomization.yml'
            helm:
              - 'charts/**'
            security:
              - '**/*'

  generic-lint:
    name: Generic Linter
    needs: changes
    if: needs.changes.outputs.generic == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Super-Linter
        uses: super-linter/super-linter@v6
        env:
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false

          VALIDATE_YAML: true
          VALIDATE_MARKDOWN: true
          VALIDATE_SHELL_SHFMT: true
          VALIDATE_SHELL: true
          VALIDATE_DOCKERFILE_HADOLINT: true

          LINTER_RULES_PATH: .github
          YAML_CONFIG_FILE: .yamllint.yml
          MARKDOWN_CONFIG_FILE: .markdownlint.json
          MARKDOWN_RULESETS: .markdownlint.json

  iac-validation:
    name: IaC Validation
    needs: changes
    if: needs.changes.outputs.terraform == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - run: terraform fmt -check -recursive
      - run: terraform init -input=false
      - run: terraform validate
      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.3

  kube:
    name: Kubernetes manifest validation
    needs: changes
    if: needs.changes.outputs.kube == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: yannh/kubeconform-action@v1
        with:
          kubeconform-args: >
            -verbose
            -strict
            -ignore-missing-schemas
            -summary
            -schema-location default
            -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master
          files: |
            kubernetes
            manifests
  helm:
    name: Helm lint
    needs: changes
    if: needs.changes.outputs.helm == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v4
      - run: |
          if [ -d charts ]; then
            find charts -maxdepth 2 -name Chart.yaml -print0 \
              | xargs -0 -n1 dirname \
              | while read -r chart; do helm lint "$chart"; done
          else
            echo "No charts/ directory; skipping."
          fi

  yamllint:
    name: YAML lint
    needs: changes
    if: needs.changes.outputs.yaml == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ibiqlik/action-yamllint@v3
        with:
          config_file: .github/.yamllint.yaml
          strict: true

  markdown:
    name: Markdown lint
    needs: changes
    if: needs.changes.outputs.md == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: markdownlint-cli2
        uses: DavidAnson/markdownlint-cli2-action@v16
        with:
          globs: |
            **/*.md
          config: .github/.markdownlint.jsonc

  security:
    name: IaC policy scan
    needs: changes
    if: needs.changes.outputs.security == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bridgecrewio/checkov-action@v12
        with:
          directory: .
          quiet: true
